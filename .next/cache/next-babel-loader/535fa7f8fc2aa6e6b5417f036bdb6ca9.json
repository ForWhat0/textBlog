{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport { MainLayout } from '../../components/MainLayout';\nimport { useRouter } from 'next/router';\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionGetPost } from \"../../redux/actions/actions\";\nimport PostContainer from \"../../components/postContainer\";\nimport StyledLoader from \"../../components/loader\";\nconst LoaderContainer = styled.div.withConfig({\n  displayName: \"id__LoaderContainer\",\n  componentId: \"a6prau-0\"\n})([\"width:100%;display:flex;justify-content:center;margin-top:50p;\"]);\nexport default function Post({\n  InitialPost\n}) {\n  const router = useRouter();\n  const id = router.query.id;\n  const dispatch = useDispatch();\n  const {\n    post\n  } = useSelector(state => state.posts);\n  const {\n    loading\n  } = useSelector(state => state.app.loading);\n  useEffect(() => {\n    async function load_SPA_data() {\n      dispatch(actionGetPost(id));\n    }\n\n    if (!InitialPost) {\n      load_SPA_data();\n    }\n  }, []);\n\n  const getPostForRender = singlePost => {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: !loading ? /*#__PURE__*/_jsx(PostContainer, {\n        size: \"small\",\n        post: singlePost\n      }) : /*#__PURE__*/_jsx(LoaderContainer, {\n        children: /*#__PURE__*/_jsx(StyledLoader, {})\n      })\n    });\n  };\n\n  const renderPost = () => {\n    if (InitialPost) {\n      return getPostForRender(InitialPost);\n    } else {\n      return getPostForRender(post);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(MainLayout, {\n    children: renderPost()\n  });\n}\n\nPost.getServerSideProps = async ({\n  query,\n  req\n}) => {\n  if (!req) {\n    return {\n      InitialPost: null\n    };\n  }\n\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${query.id}`);\n  const InitialPost = await response.json();\n  return {\n    InitialPost\n  };\n};","map":null,"metadata":{},"sourceType":"module"}