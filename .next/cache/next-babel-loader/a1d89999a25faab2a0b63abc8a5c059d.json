{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from 'styled-components';\nimport { MainLayout } from '../components/MainLayout';\nimport { actionGetPosts } from \"../redux/actions/actions\";\nimport PostContainer from '../components/postContainer';\nimport StyledLoader from \"../components/loader\";\nimport StyledButton from \"../components/button\";\nconst GlobalContainer = styled.div.withConfig({\n  displayName: \"pages__GlobalContainer\",\n  componentId: \"dznqvx-0\"\n})([\"margin:0 auto;max-width:1040px;width:100%\"]);\nconst LoaderContainer = styled.div.withConfig({\n  displayName: \"pages__LoaderContainer\",\n  componentId: \"dznqvx-1\"\n})([\"width:100%;display:flex;justify-content:center;\"]);\nconst PostsContainer = styled.div.withConfig({\n  displayName: \"pages__PostsContainer\",\n  componentId: \"dznqvx-2\"\n})([\"position:relative;display:flex;flex-wrap:wrap;margin:0 -20px;\"]);\nexport default function Posts({\n  InitialPosts\n}) {\n  const dispatch = useDispatch();\n  const {\n    posts\n  } = useSelector(state => state.posts);\n  const {\n    loading\n  } = useSelector(state => state.app);\n  const {\n    limit\n  } = useSelector(state => state.posts);\n\n  const loadMore = () => {\n    async function load_SPA_data() {\n      if (limit === 6) {\n        dispatch(actionGetPosts(12));\n      } else {\n        dispatch(actionGetPosts(limit));\n      }\n    }\n\n    load_SPA_data();\n  };\n\n  useEffect(() => {\n    async function load_SPA_data() {\n      dispatch(actionGetPosts(limit));\n    }\n\n    if (!InitialPosts) {\n      load_SPA_data();\n    }\n  }, []);\n\n  const getPostsForRender = arr => {\n    return arr.map((post, index) => {\n      if (index === 0 || index % 6 === 0) {\n        // @ts-ignore\n        return /*#__PURE__*/_jsx(PostContainer, {\n          size: \"large\",\n          post: post\n        }, post.id);\n      } else {\n        // @ts-ignore\n        return /*#__PURE__*/_jsx(PostContainer, {\n          size: \"small\",\n          post: post\n        }, post.id);\n      }\n    });\n  };\n\n  const renderPosts = () => {\n    if (InitialPosts && !posts.length) {\n      return getPostsForRender(InitialPosts);\n    } else {\n      return getPostsForRender(posts);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(MainLayout, {\n    title: 'Home Page',\n    children: /*#__PURE__*/_jsxs(GlobalContainer, {\n      children: [/*#__PURE__*/_jsx(PostsContainer, {\n        children: renderPosts()\n      }), loading ? /*#__PURE__*/_jsx(LoaderContainer, {\n        children: /*#__PURE__*/_jsx(StyledLoader, {})\n      }) : /*#__PURE__*/_jsx(StyledButton, {\n        type: \"submit\",\n        text: \"Load More\",\n        func: loadMore\n      })]\n    })\n  });\n}\n\nPosts.getStaticProps = async ({\n  req\n}) => {\n  if (!req) {\n    return {\n      InitialPosts: null\n    };\n  }\n\n  const data = await axios.get(`https://simple-blog-api.crew.red/posts?_limit=6`);\n  const InitialPosts = data.data;\n  return {\n    InitialPosts\n  };\n};","map":null,"metadata":{},"sourceType":"module"}