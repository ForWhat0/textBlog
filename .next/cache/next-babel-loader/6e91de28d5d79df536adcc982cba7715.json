{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getPosts, getPost, hideLoader, showLoader, showAlert, hideAlert, createPost } from '../types/types';\nimport axios from 'axios';\nexport function ShowAlert(text, type) {\n  return function (dispatch) {\n    dispatch({\n      type: showAlert,\n      payload: {\n        text: text,\n        type: type\n      }\n    });\n    setTimeout(function () {\n      dispatch(HideAlert());\n    }, 3000);\n  };\n}\n_c = ShowAlert;\n\nfunction HideAlert() {\n  return {\n    type: hideAlert\n  };\n}\n\n_c2 = HideAlert;\nexport function ShowLoader() {\n  return {\n    type: showLoader\n  };\n}\n_c3 = ShowLoader;\nexport function HideLoader() {\n  return {\n    type: hideLoader\n  };\n}\n_c4 = HideLoader;\nexport function actionGetPosts(limit) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch(ShowLoader());\n              _context.next = 4;\n              return axios.get(\"https://simple-blog-api.crew.red/posts?_limit=\".concat(limit));\n\n            case 4:\n              data = _context.sent;\n              dispatch({\n                type: getPosts,\n                payload: data.data\n              });\n              dispatch(HideLoader());\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch(ShowAlert(_context.t0.message, 'error'));\n              dispatch(HideLoader);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function actionGetPost(id) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch(ShowLoader());\n              _context2.next = 4;\n              return axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id));\n\n            case 4:\n              data = _context2.sent;\n              dispatch({\n                type: getPost,\n                payload: data.data\n              });\n              dispatch(HideLoader());\n              _context2.next = 13;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch(ShowAlert(_context2.t0.message, 'error'));\n              dispatch(HideLoader);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nexport function actionCreatePost(text) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var middleware, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return dispatch({\n                type: createPost,\n                payload: text.title\n              });\n\n            case 2:\n              middleware = _context3.sent;\n\n              if (!(middleware === 'error')) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              _context3.prev = 5;\n              dispatch(ShowLoader());\n              _context3.next = 9;\n              return axios({\n                method: 'post',\n                url: 'https://simple-blog-api.crew.red/posts',\n                data: {\n                  title: text.title,\n                  body: text.body\n                }\n              });\n\n            case 9:\n              data = _context3.sent;\n              dispatch(HideLoader());\n              dispatch(ShowAlert('Post is created', 'success'));\n              _context3.next = 18;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](5);\n              dispatch(HideLoader);\n              dispatch(ShowAlert(_context3.t0.message, 'error'));\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 14]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShowAlert\");\n$RefreshReg$(_c2, \"HideAlert\");\n$RefreshReg$(_c3, \"ShowLoader\");\n$RefreshReg$(_c4, \"HideLoader\");","map":{"version":3,"sources":["D:/react/test-blog-project/redux/actions/actions.tsx"],"names":["getPosts","getPost","hideLoader","showLoader","showAlert","hideAlert","createPost","axios","ShowAlert","text","type","dispatch","payload","setTimeout","HideAlert","ShowLoader","HideLoader","actionGetPosts","limit","get","data","message","actionGetPost","id","actionCreatePost","title","middleware","method","url","body"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,UAAvC,EAAmDC,SAAnD,EAA8DC,SAA9D,EAAyEC,UAAzE,QAA0F,gBAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGC,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAA+BC,IAA/B,EAA2C;AAC/C,SAAO,UAAAC,QAAQ,EAAE;AACbA,IAAAA,QAAQ,CAAC;AACLD,MAAAA,IAAI,EAACN,SADA;AAELQ,MAAAA,OAAO,EAAC;AACJH,QAAAA,IAAI,EAAJA,IADI;AAEJC,QAAAA,IAAI,EAAJA;AAFI;AAFH,KAAD,CAAR;AAOIG,IAAAA,UAAU,CAAC,YAAI;AACXF,MAAAA,QAAQ,CAACG,SAAS,EAAV,CAAR;AACH,KAFS,EAER,IAFQ,CAAV;AAGP,GAXD;AAYH;KAbgBN,S;;AAehB,SAASM,SAAT,GAAoB;AACjB,SAAM;AACFJ,IAAAA,IAAI,EAACL;AADH,GAAN;AAGH;;MAJSS,S;AAMV,OAAO,SAASC,UAAT,GAAqB;AACxB,SAAM;AACFL,IAAAA,IAAI,EAACP;AADH,GAAN;AAGH;MAJeY,U;AAMf,OAAO,SAASC,UAAT,GAAqB;AACzB,SAAM;AACFN,IAAAA,IAAI,EAACR;AADH,GAAN;AAGH;MAJgBc,U;AAMjB,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA8C;AACjD;AAAA,wEAAO,iBAAMP,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDA,cAAAA,QAAQ,CAACI,UAAU,EAAX,CAAR;AAFC;AAAA,qBAGkBR,KAAK,CAACY,GAAN,yDAA2DD,KAA3D,EAHlB;;AAAA;AAGKE,cAAAA,IAHL;AAICT,cAAAA,QAAQ,CAAC;AAACD,gBAAAA,IAAI,EAACV,QAAN;AAAeY,gBAAAA,OAAO,EAACQ,IAAI,CAACA;AAA5B,eAAD,CAAR;AACAT,cAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AALD;AAAA;;AAAA;AAAA;AAAA;AAQDL,cAAAA,QAAQ,CAACH,SAAS,CAAC,YAAEa,OAAH,EAAW,OAAX,CAAV,CAAR;AACEV,cAAAA,QAAQ,CAACK,UAAD,CAAR;;AATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAaH;AAED,OAAO,SAASM,aAAT,CAAuBC,EAAvB,EAA6C;AAChD;AAAA,yEAAO,kBAAMZ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECA,cAAAA,QAAQ,CAACI,UAAU,EAAX,CAAR;AAFD;AAAA,qBAGoBR,KAAK,CAACY,GAAN,kDAAoDI,EAApD,EAHpB;;AAAA;AAGOH,cAAAA,IAHP;AAICT,cAAAA,QAAQ,CAAC;AAACD,gBAAAA,IAAI,EAACT,OAAN;AAAcW,gBAAAA,OAAO,EAACQ,IAAI,CAACA;AAA3B,eAAD,CAAR;AACAT,cAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AALD;AAAA;;AAAA;AAAA;AAAA;AAQCL,cAAAA,QAAQ,CAACH,SAAS,CAAC,aAAEa,OAAH,EAAW,OAAX,CAAV,CAAR;AACAV,cAAAA,QAAQ,CAACK,UAAD,CAAR;;AATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAYH;AAKD,OAAO,SAASQ,gBAAT,CAA0Bf,IAA1B,EAAwD;AAC3D;AAAA,yEAAO,kBAAME,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACwBA,QAAQ,CAAC;AAACD,gBAAAA,IAAI,EAACJ,UAAN;AAAiBM,gBAAAA,OAAO,EAACH,IAAI,CAACgB;AAA9B,eAAD,CADhC;;AAAA;AACGC,cAAAA,UADH;;AAAA,oBAECA,UAAU,KAAK,OAFhB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAMCf,cAAAA,QAAQ,CAACI,UAAU,EAAX,CAAR;AAND;AAAA,qBAOoBR,KAAK,CAAC;AACrBoB,gBAAAA,MAAM,EAAE,MADa;AAErBC,gBAAAA,GAAG,EAAE,wCAFgB;AAGrBR,gBAAAA,IAAI,EAAE;AACFK,kBAAAA,KAAK,EAAEhB,IAAI,CAACgB,KADV;AAEFI,kBAAAA,IAAI,EAAEpB,IAAI,CAACoB;AAFT;AAHe,eAAD,CAPzB;;AAAA;AAOOT,cAAAA,IAPP;AAeCT,cAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AACAL,cAAAA,QAAQ,CAACH,SAAS,CAAC,iBAAD,EAAmB,SAAnB,CAAV,CAAR;AAhBD;AAAA;;AAAA;AAAA;AAAA;AAmBCG,cAAAA,QAAQ,CAACK,UAAD,CAAR;AACAL,cAAAA,QAAQ,CAACH,SAAS,CAAC,aAAEa,OAAH,EAAW,OAAX,CAAV,CAAR;;AApBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAuBH","sourcesContent":["import {getPosts, getPost, hideLoader, showLoader, showAlert, hideAlert, createPost} from '../types/types'\r\nimport axios from 'axios'\r\n\r\n\r\n export function ShowAlert(text:string,type:string){\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:showAlert,\r\n            payload:{\r\n                text,\r\n                type\r\n            }\r\n        })\r\n            setTimeout(()=>{\r\n                dispatch(HideAlert())\r\n            },3000)\r\n    }\r\n}\r\n\r\n function HideAlert(){\r\n    return{\r\n        type:hideAlert\r\n    }\r\n}\r\n\r\nexport function ShowLoader(){\r\n    return{\r\n        type:showLoader\r\n    }\r\n}\r\n\r\n export function HideLoader(){\r\n    return{\r\n        type:hideLoader\r\n    }\r\n}\r\n\r\nexport function actionGetPosts(limit:string | number){\r\n    return async dispatch=>{\r\n        try{\r\n          dispatch(ShowLoader())\r\n          const data = await axios.get(`https://simple-blog-api.crew.red/posts?_limit=${limit}`)\r\n            dispatch({type:getPosts,payload:data.data})\r\n            dispatch(HideLoader())\r\n        }\r\n        catch (e){\r\n          dispatch(ShowAlert(e.message,'error'))\r\n            dispatch(HideLoader)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function actionGetPost(id: string | string[]){\r\n    return async dispatch=>{\r\n        try{\r\n            dispatch(ShowLoader())\r\n            const data = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`)\r\n            dispatch({type:getPost,payload:data.data})\r\n            dispatch(HideLoader())\r\n        }\r\n        catch (e){\r\n            dispatch(ShowAlert(e.message,'error'))\r\n            dispatch(HideLoader)\r\n        }\r\n    }\r\n}\r\ntype actionCreatePostTextType ={\r\n    title:string,\r\n    body:string\r\n}\r\nexport function actionCreatePost(text:actionCreatePostTextType){\r\n    return async dispatch=>{\r\n        const middleware =  await  dispatch({type:createPost,payload:text.title})\r\n        if (middleware === 'error'){\r\n            return\r\n        }\r\n        try{\r\n            dispatch(ShowLoader())\r\n            const data = await axios({\r\n                method: 'post',\r\n                url: 'https://simple-blog-api.crew.red/posts',\r\n                data: {\r\n                    title: text.title,\r\n                    body: text.body\r\n                }\r\n            })\r\n            dispatch(HideLoader())\r\n            dispatch(ShowAlert('Post is created','success'))\r\n        }\r\n        catch (e){\r\n            dispatch(HideLoader)\r\n            dispatch(ShowAlert(e.message,'error'))\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}